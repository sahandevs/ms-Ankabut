// Generated from ../HashemiGrammer.g4 by ANTLR 4.7.3-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class HashemiGrammerLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly T__17 = 18;
	public static readonly T__18 = 19;
	public static readonly T__19 = 20;
	public static readonly T__20 = 21;
	public static readonly T__21 = 22;
	public static readonly T__22 = 23;
	public static readonly T__23 = 24;
	public static readonly T__24 = 25;
	public static readonly T__25 = 26;
	public static readonly T__26 = 27;
	public static readonly T__27 = 28;
	public static readonly T__28 = 29;
	public static readonly T__29 = 30;
	public static readonly T__30 = 31;
	public static readonly T__31 = 32;
	public static readonly WS = 33;
	public static readonly COMMENT = 34;
	public static readonly LINE_COMMENT = 35;
	public static readonly IDENTIFIER = 36;
	public static readonly STRING_LITERAL = 37;
	public static readonly NUMERIC_LITERAL = 38;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "WS", "COMMENT", 
		"LINE_COMMENT", "LETTER", "NON_ZERO_DIGIT", "DIGIT", "HEX_DIGIT", "OCT_DIGIT", 
		"BINARY_DIGIT", "TAB", "STRING_CHAR", "IDENTIFIER", "STRING_LITERAL", 
		"NUMERIC_LITERAL",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'bebin'", "'('", "','", "')'", "'{'", "'}'", "'khob'", "';'", 
		"'badi'", "'debugger'", "'ta'", "') bood'", "'age'", "'na?'", "'bede'", 
		"'||'", "'&&'", "'<'", "'<='", "'>'", "'>='", "'=='", "'!='", "'+'", "'-'", 
		"'*'", "'/'", "'%'", "'='", "'.'", "'['", "']'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, "WS", "COMMENT", 
		"LINE_COMMENT", "IDENTIFIER", "STRING_LITERAL", "NUMERIC_LITERAL",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(HashemiGrammerLexer._LITERAL_NAMES, HashemiGrammerLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return HashemiGrammerLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(HashemiGrammerLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "HashemiGrammer.g4"; }

	// @Override
	public get ruleNames(): string[] { return HashemiGrammerLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return HashemiGrammerLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return HashemiGrammerLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return HashemiGrammerLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02(\u0110\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x03\x02\x03\x02\x03\x02\x03\x02\x03" +
		"\x02\x03\x02\x03\x03\x03\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03\x06\x03" +
		"\x06\x03\x07\x03\x07\x03\b\x03\b\x03\b\x03\b\x03\b\x03\t\x03\t\x03\n\x03" +
		"\n\x03\n\x03\n\x03\n\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03" +
		"\v\x03\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\x0E" +
		"\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10" +
		"\x03\x10\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11\x03\x12\x03\x12\x03\x12" +
		"\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15\x03\x16\x03\x16" +
		"\x03\x16\x03\x17\x03\x17\x03\x17\x03\x18\x03\x18\x03\x18\x03\x19\x03\x19" +
		"\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1E" +
		"\x03\x1E\x03\x1F\x03\x1F\x03 \x03 \x03!\x03!\x03\"\x06\"\xC5\n\"\r\"\x0E" +
		"\"\xC6\x03\"\x03\"\x03#\x03#\x03#\x03#\x07#\xCF\n#\f#\x0E#\xD2\v#\x03" +
		"#\x03#\x03#\x03#\x03#\x03$\x03$\x03$\x03$\x07$\xDD\n$\f$\x0E$\xE0\v$\x03" +
		"$\x03$\x03%\x05%\xE5\n%\x03&\x03&\x03\'\x03\'\x03(\x05(\xEC\n(\x03)\x03" +
		")\x03*\x03*\x03+\x03+\x03,\x03,\x03-\x03-\x03-\x07-\xF9\n-\f-\x0E-\xFC" +
		"\v-\x03.\x03.\x07.\u0100\n.\f.\x0E.\u0103\v.\x03.\x03.\x03/\x03/\x03/" +
		"\x07/\u010A\n/\f/\x0E/\u010D\v/\x05/\u010F\n/\x03\xD0\x02\x020\x03\x02" +
		"\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11" +
		"\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10" +
		"\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02" +
		"\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02" +
		" ?\x02!A\x02\"C\x02#E\x02$G\x02%I\x02\x02K\x02\x02M\x02\x02O\x02\x02Q" +
		"\x02\x02S\x02\x02U\x02\x02W\x02\x02Y\x02&[\x02\']\x02(\x03\x02\n\x05\x02" +
		"\v\f\x0E\x0F\"\"\x04\x02\f\f\x0F\x0F\x06\x02&&C\\aac|\x03\x023;\x03\x02" +
		"2;\x05\x022;CHch\x03\x0229\x06\x02\f\f\x0F\x0F$$^^\x02\u010F\x02\x03\x03" +
		"\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03" +
		"\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02" +
		"\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02" +
		"\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02" +
		"\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02" +
		"\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02" +
		"\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03" +
		"\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02" +
		"\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02" +
		"=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02" +
		"\x02\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02\x02\x02Y\x03\x02\x02\x02" +
		"\x02[\x03\x02\x02\x02\x02]\x03\x02\x02\x02\x03_\x03\x02\x02\x02\x05e\x03" +
		"\x02\x02\x02\x07g\x03\x02\x02\x02\ti\x03\x02\x02\x02\vk\x03\x02\x02\x02" +
		"\rm\x03\x02\x02\x02\x0Fo\x03\x02\x02\x02\x11t\x03\x02\x02\x02\x13v\x03" +
		"\x02\x02\x02\x15{\x03\x02\x02\x02\x17\x84\x03\x02\x02\x02\x19\x87\x03" +
		"\x02\x02\x02\x1B\x8E\x03\x02\x02\x02\x1D\x92\x03\x02\x02\x02\x1F\x96\x03" +
		"\x02\x02\x02!\x9B\x03\x02\x02\x02#\x9E\x03\x02\x02\x02%\xA1\x03\x02\x02" +
		"\x02\'\xA3\x03\x02\x02\x02)\xA6\x03\x02\x02\x02+\xA8\x03\x02\x02\x02-" +
		"\xAB\x03\x02\x02\x02/\xAE\x03\x02\x02\x021\xB1\x03\x02\x02\x023\xB3\x03" +
		"\x02\x02\x025\xB5\x03\x02\x02\x027\xB7\x03\x02\x02\x029\xB9\x03\x02\x02" +
		"\x02;\xBB\x03\x02\x02\x02=\xBD\x03\x02\x02\x02?\xBF\x03\x02\x02\x02A\xC1" +
		"\x03\x02\x02\x02C\xC4\x03\x02\x02\x02E\xCA\x03\x02\x02\x02G\xD8\x03\x02" +
		"\x02\x02I\xE4\x03\x02\x02\x02K\xE6\x03\x02\x02\x02M\xE8\x03\x02\x02\x02" +
		"O\xEB\x03\x02\x02\x02Q\xED\x03\x02\x02\x02S\xEF\x03\x02\x02\x02U\xF1\x03" +
		"\x02\x02\x02W\xF3\x03\x02\x02\x02Y\xF5\x03\x02\x02\x02[\xFD\x03\x02\x02" +
		"\x02]\u010E\x03\x02\x02\x02_`\x07d\x02\x02`a\x07g\x02\x02ab\x07d\x02\x02" +
		"bc\x07k\x02\x02cd\x07p\x02\x02d\x04\x03\x02\x02\x02ef\x07*\x02\x02f\x06" +
		"\x03\x02\x02\x02gh\x07.\x02\x02h\b\x03\x02\x02\x02ij\x07+\x02\x02j\n\x03" +
		"\x02\x02\x02kl\x07}\x02\x02l\f\x03\x02\x02\x02mn\x07\x7F\x02\x02n\x0E" +
		"\x03\x02\x02\x02op\x07m\x02\x02pq\x07j\x02\x02qr\x07q\x02\x02rs\x07d\x02" +
		"\x02s\x10\x03\x02\x02\x02tu\x07=\x02\x02u\x12\x03\x02\x02\x02vw\x07d\x02" +
		"\x02wx\x07c\x02\x02xy\x07f\x02\x02yz\x07k\x02\x02z\x14\x03\x02\x02\x02" +
		"{|\x07f\x02\x02|}\x07g\x02\x02}~\x07d\x02\x02~\x7F\x07w\x02\x02\x7F\x80" +
		"\x07i\x02\x02\x80\x81\x07i\x02\x02\x81\x82\x07g\x02\x02\x82\x83\x07t\x02" +
		"\x02\x83\x16\x03\x02\x02\x02\x84\x85\x07v\x02\x02\x85\x86\x07c\x02\x02" +
		"\x86\x18\x03\x02\x02\x02\x87\x88\x07+\x02\x02\x88\x89\x07\"\x02\x02\x89" +
		"\x8A\x07d\x02\x02\x8A\x8B\x07q\x02\x02\x8B\x8C\x07q\x02\x02\x8C\x8D\x07" +
		"f\x02\x02\x8D\x1A\x03\x02\x02\x02\x8E\x8F\x07c\x02\x02\x8F\x90\x07i\x02" +
		"\x02\x90\x91\x07g\x02\x02\x91\x1C\x03\x02\x02\x02\x92\x93\x07p\x02\x02" +
		"\x93\x94\x07c\x02\x02\x94\x95\x07A\x02\x02\x95\x1E\x03\x02\x02\x02\x96" +
		"\x97\x07d\x02\x02\x97\x98\x07g\x02\x02\x98\x99\x07f\x02\x02\x99\x9A\x07" +
		"g\x02\x02\x9A \x03\x02\x02\x02\x9B\x9C\x07~\x02\x02\x9C\x9D\x07~\x02\x02" +
		"\x9D\"\x03\x02\x02\x02\x9E\x9F\x07(\x02\x02\x9F\xA0\x07(\x02\x02\xA0$" +
		"\x03\x02\x02\x02\xA1\xA2\x07>\x02\x02\xA2&\x03\x02\x02\x02\xA3\xA4\x07" +
		">\x02\x02\xA4\xA5\x07?\x02\x02\xA5(\x03\x02\x02\x02\xA6\xA7\x07@\x02\x02" +
		"\xA7*\x03\x02\x02\x02\xA8\xA9\x07@\x02\x02\xA9\xAA\x07?\x02\x02\xAA,\x03" +
		"\x02\x02\x02\xAB\xAC\x07?\x02\x02\xAC\xAD\x07?\x02\x02\xAD.\x03\x02\x02" +
		"\x02\xAE\xAF\x07#\x02\x02\xAF\xB0\x07?\x02\x02\xB00\x03\x02\x02\x02\xB1" +
		"\xB2\x07-\x02\x02\xB22\x03\x02\x02\x02\xB3\xB4\x07/\x02\x02\xB44\x03\x02" +
		"\x02\x02\xB5\xB6\x07,\x02\x02\xB66\x03\x02\x02\x02\xB7\xB8\x071\x02\x02" +
		"\xB88\x03\x02\x02\x02\xB9\xBA\x07\'\x02\x02\xBA:\x03\x02\x02\x02\xBB\xBC" +
		"\x07?\x02\x02\xBC<\x03\x02\x02\x02\xBD\xBE\x070\x02\x02\xBE>\x03\x02\x02" +
		"\x02\xBF\xC0\x07]\x02\x02\xC0@\x03\x02\x02\x02\xC1\xC2\x07_\x02\x02\xC2" +
		"B\x03\x02\x02\x02\xC3\xC5\t\x02\x02\x02\xC4\xC3\x03\x02\x02\x02\xC5\xC6" +
		"\x03\x02\x02\x02\xC6\xC4\x03\x02\x02\x02\xC6\xC7\x03\x02\x02\x02\xC7\xC8" +
		"\x03\x02\x02\x02\xC8\xC9\b\"\x02\x02\xC9D\x03\x02\x02\x02\xCA\xCB\x07" +
		"1\x02\x02\xCB\xCC\x07,\x02\x02\xCC\xD0\x03\x02\x02\x02\xCD\xCF\v\x02\x02" +
		"\x02\xCE\xCD\x03\x02\x02\x02\xCF\xD2\x03\x02\x02\x02\xD0\xD1\x03\x02\x02" +
		"\x02\xD0\xCE\x03\x02\x02\x02\xD1\xD3\x03\x02\x02\x02\xD2\xD0\x03\x02\x02" +
		"\x02\xD3\xD4\x07,\x02\x02\xD4\xD5\x071\x02\x02\xD5\xD6\x03\x02\x02\x02" +
		"\xD6\xD7\b#\x02\x02\xD7F\x03\x02\x02\x02\xD8\xD9\x071\x02\x02\xD9\xDA" +
		"\x071\x02\x02\xDA\xDE\x03\x02\x02\x02\xDB\xDD\n\x03\x02\x02\xDC\xDB\x03" +
		"\x02\x02\x02\xDD\xE0\x03\x02\x02\x02\xDE\xDC\x03\x02\x02\x02\xDE\xDF\x03" +
		"\x02\x02\x02\xDF\xE1\x03\x02\x02\x02\xE0\xDE\x03\x02\x02\x02\xE1\xE2\b" +
		"$\x02\x02\xE2H\x03\x02\x02\x02\xE3\xE5\t\x04\x02\x02\xE4\xE3\x03\x02\x02" +
		"\x02\xE5J\x03\x02\x02\x02\xE6\xE7\t\x05\x02\x02\xE7L\x03\x02\x02\x02\xE8" +
		"\xE9\t\x06\x02\x02\xE9N\x03\x02\x02\x02\xEA\xEC\t\x07\x02\x02\xEB\xEA" +
		"\x03\x02\x02\x02\xECP\x03\x02\x02\x02\xED\xEE\t\b\x02\x02\xEER\x03\x02" +
		"\x02\x02\xEF\xF0\x0423\x02\xF0T\x03\x02\x02\x02\xF1\xF2\x07\v\x02\x02" +
		"\xF2V\x03\x02\x02\x02\xF3\xF4\n\t\x02\x02\xF4X\x03\x02\x02\x02\xF5\xFA" +
		"\x05I%\x02\xF6\xF9\x05I%\x02\xF7\xF9\x05M\'\x02\xF8\xF6\x03\x02\x02\x02" +
		"\xF8\xF7\x03\x02\x02\x02\xF9\xFC\x03\x02\x02\x02\xFA\xF8\x03\x02\x02\x02" +
		"\xFA\xFB\x03\x02\x02\x02\xFBZ\x03\x02\x02\x02\xFC\xFA\x03\x02\x02\x02" +
		"\xFD\u0101\x07$\x02\x02\xFE\u0100\x05W,\x02\xFF\xFE\x03\x02\x02\x02\u0100" +
		"\u0103\x03\x02\x02\x02\u0101\xFF\x03\x02\x02\x02\u0101\u0102\x03\x02\x02" +
		"\x02\u0102\u0104\x03\x02\x02\x02\u0103\u0101\x03\x02\x02\x02\u0104\u0105" +
		"\x07$\x02\x02\u0105\\\x03\x02\x02\x02\u0106\u010F\x072\x02\x02\u0107\u010B" +
		"\x05K&\x02\u0108\u010A\x05M\'\x02\u0109\u0108\x03\x02\x02\x02\u010A\u010D" +
		"\x03\x02\x02\x02\u010B\u0109\x03\x02\x02\x02\u010B\u010C\x03\x02\x02\x02" +
		"\u010C\u010F\x03\x02\x02\x02\u010D\u010B\x03\x02\x02\x02\u010E\u0106\x03" +
		"\x02\x02\x02\u010E\u0107\x03\x02\x02\x02\u010F^\x03\x02\x02\x02\r\x02" +
		"\xC6\xD0\xDE\xE4\xEB\xF8\xFA\u0101\u010B\u010E\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!HashemiGrammerLexer.__ATN) {
			HashemiGrammerLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(HashemiGrammerLexer._serializedATN));
		}

		return HashemiGrammerLexer.__ATN;
	}

}

